<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	width="100%"
	height="100%"
	backgroundColor="0x444444"
	verticalGap="0"
	implements="actionScripts.ui.IPanelWindow"
	verticalScrollPolicy="off" xmlns:project="actionScripts.ui.project.*">
	<mx:Style>
		.headerStyle
		{
			color: #e0e0e0;
			fontWeight: bold;
		}
	</mx:Style>
	<mx:Script><![CDATA[
		import actionScripts.locator.IDEModel;
		import actionScripts.ui.tabview.TabViewTab;
		import actionScripts.valueObjects.Diagnostic;
		import actionScripts.valueObjects.Position;
		import actionScripts.valueObjects.Range;

		import mx.collections.ArrayCollection;
		import mx.controls.dataGridClasses.DataGridColumn;

		[Bindable]
		public var objectTree:ArrayCollection = new ArrayCollection();

		private function diagnosticToLocationLabel(diagnostic:Diagnostic, column:DataGridColumn):String
		{
			var range:Range = diagnostic.range;
			var start:Position = range.start;
			var shortPath:String = (new File(diagnostic.path)).name;
			return shortPath + " (" + start.line + ", " + start.character + ")";
		}

		private function initHeader():void
		{
			header.addEventListener(TabViewTab.EVENT_TAB_CLOSE, handleClose);
		}

		private function handleClose(event:Event):void
		{
			if(stage)
			{
				IDEModel.getInstance().mainView.removePanel(this);
			}
		}

	]]></mx:Script>

	<project:ProjectViewHeader
		id="header"
		label="Problems"
		width="100%"
		creationComplete="initHeader()" />

	<mx:DataGrid id="problemsTree"
		dataProvider="{objectTree}"
		width="100%" height="100%"
		draggableColumns="false"
		sortableColumns="false"
		color="0xe0e0e0"
		contentBackgroundColor="0x0"
		textRollOverColor="0xFFFFFF"
		rollOverColor="0x393939"
		selectionColor="0x393939"
		alternatingItemColors="[0x444444, 0x4d4c4c]"
		textSelectedColor="0xe0e0e0"
		borderVisible="false"
		useRollOver="true"
		headerStyleName="headerStyle"
		chromeColor="#393939">
		<mx:columns>
			<mx:DataGridColumn headerText="Problem" showDataTips="true"
				dataField="message"
				dataTipField="message"/>
			<mx:DataGridColumn headerText="Location" showDataTips="true"
				labelFunction="{diagnosticToLocationLabel}"
				dataTipField="path"/>
		</mx:columns>
	</mx:DataGrid>
</mx:VBox>
