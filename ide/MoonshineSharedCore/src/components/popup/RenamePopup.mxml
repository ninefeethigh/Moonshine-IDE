<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   backgroundColor="0xf5f5f5"
				   width="350" minWidth="250" autoLayout="true"
				   creationComplete="onCreationCompletes(event)" 
				   xmlns:view="actionScripts.plugin.findreplace.view.*" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
				   skinClass="components.skins.ResizableTitleWindowSkin">
	<fx:Metadata>
		[Event(name="EVENT_FILE_RENAMED", type="actionScripts.events.NewFileEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			import actionScripts.events.GlobalEventDispatcher;
			import actionScripts.events.NewFileEvent;
			import actionScripts.ui.menu.MenuPlugin;
			import actionScripts.valueObjects.FileWrapper;
			
			public var wrapperOfFolderLocation:FileWrapper;
			
			[Bindable] private var fileExtension:String;
			[Bindable] private var modifiedName:String = "";
			[Bindable] private var originalFileName:String;
			
			override protected function closeByCrossSign(event:Event):void
			{
				doBeforeExit();
				super.closeByCrossSign(event);
			}
			
			override protected function onResizeKeyDownEvent(event:KeyboardEvent):void
			{
				doBeforeExit();
				super.onResizeKeyDownEvent(event);
			}
			
			protected function doBeforeExit():void
			{
				GlobalEventDispatcher.getInstance().dispatchEvent(new Event(MenuPlugin.CHANGE_MENU_MAC_ENABLE_STATE));
			}
			
			protected function onChangeButton(event:MouseEvent):void
			{
				// validation check for Enter key
				if (!btnChange.enabled) return;
				
				var tmpEvent:NewFileEvent = new NewFileEvent(NewFileEvent.EVENT_FILE_RENAMED, null, null, wrapperOfFolderLocation);
				tmpEvent.fileName = txtFileName.text + fileExtension;
				dispatchEvent(tmpEvent);
				
				doBeforeExit();
				super.closeThis();
			}
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				minHeight = height;
				if (wrapperOfFolderLocation) 
				{
					txtFileName.text = wrapperOfFolderLocation.file.fileBridge.name.split(".")[0];
					txtFileName.setFocus();
					txtFileName.selectRange(0, txtFileName.text.length);
					originalFileName = txtFileName.text;
					
					fileExtension = (wrapperOfFolderLocation.file.fileBridge.isDirectory) ? "" : "."+ wrapperOfFolderLocation.file.fileBridge.extension;
					this.title = (fileExtension == "") ? "Rename Package" : "Rename Class";
				}
				
				GlobalEventDispatcher.getInstance().dispatchEvent(new Event(MenuPlugin.CHANGE_MENU_MAC_DISABLE_STATE));
			}
			
			protected function onNameChanged(event:TextOperationEvent):void
			{
				// @note
				// for some reason PromptTextInput.text is not binding properly
				// to other Flex UI component, i.e. Label
				// it shows only the origianl set text to PromptTextInput.text if
				// binded to a label component, thus:
				modifiedName = txtFileName.text;
				
				if (txtFileName.text == "") btnChange.enabled = false;
				else btnChange.enabled = !wrapperOfFolderLocation.file.fileBridge.parent.fileBridge.resolvePath(txtFileName.text + fileExtension).fileBridge.exists;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  gap="10" paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13"
			  horizontalAlign="center">
		<s:VGroup width="100%">
			<s:Label text="New Name:"/>
			<view:PromptTextInput id="txtFileName"
								  prompt="Rename To" width="100%" styleName="textInput" restrict="0-9A-Za-z_"
								  change="onNameChanged(event)" enter="onChangeButton(null)"/>
			<s:HGroup id="hgExistingWarning" 
					  width="100%" verticalAlign="middle"
					  visible="{!btnChange.enabled &amp;&amp; modifiedName != '' &amp;&amp; modifiedName != originalFileName}">
				<s:Image source="@Embed('/elements/images/iconExclamationRed.png')"/>
				<s:Label text="{modifiedName + fileExtension + ' is already exists.'}" width="100%"/>
			</s:HGroup>
		</s:VGroup>
		<mx:HRule width="100%" height="1" strokeColor="0xdadada"
				  horizontalCenter="0"/>
		<s:Button id="btnChange" label="Change"
				  styleName="lightButtonTight" width="80"
				  click="onChangeButton(event)"
				  enabled="false"/>
	</s:VGroup>
</resizableTitleWindow:ResizableTitleWindow>