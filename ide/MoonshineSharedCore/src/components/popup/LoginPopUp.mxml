<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   backgroundColor="0xf5f5f5" 
			   width="400" height="160" minWidth="400" minHeight="160"
			   xmlns:view="actionScripts.plugin.findreplace.view.*" xmlns:popup="components.popup.*" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
			   skinClass="components.skins.ResizableTitleWindowSkin">
	<fx:Script>
		<![CDATA[
			
			import spark.components.Image;
			import spark.effects.Move;
			import spark.effects.Resize;
			
			import actionScripts.controllers.DataAgent;
			import actionScripts.locator.IDEModel;
			
			import components.skins.ResizableTitleWindowSkin;
			
			private var model:IDEModel = IDEModel.getInstance();
			private var effectMove: Move;
			private var effectResize: Resize;
			private var loaderIcon: Image;
			public var isLastDataCallingAgent		: Boolean;
		
			public var successFunctionCallback		: Function; // Holds the author component's success handler (param: errorMessage, successMessage ..args)
			public var errorFunctionCallback		: Function; // Holds the author component's fault handler (param: errorMessage)
			public var anObject						: Object;
			public var eventType					: String;
			public var postUrl						: String;
			public var timeOut						: Number;
			protected var loader					: DataAgent;
			
			private function onUserLoginSuccess(event:Event):void
			{
				effectMove = new Move();
				effectResize = new Resize();
				
				effectMove.yTo = (this.stage.stageHeight - (this.height + 50))/2;
				effectMove.xTo = (this.stage.stageWidth - (this.width + 100))/2;
				
				effectResize.heightTo = this.height + 50;
				effectResize.widthTo = this.width + 100;
				
				effectResize.play([this]);
				effectMove.play([this]); 
				
				super.closeThis();
				
				//Calling user's last stored dataagent again to finish the action which user has selected
				if(isLastDataCallingAgent)
					loader = new DataAgent(postUrl, successFunctionCallback, errorFunctionCallback, anObject);
			}
			
			override protected function closeByCrossSign(event:Event):void
			{
				super.closeByCrossSign(event);
				
				//calling component's fault handler to stop the event processing
				if(isLastDataCallingAgent){
					if(errorFunctionCallback!=null)
						errorFunctionCallback("");
				}
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" verticalCenter="0" autoLayout="true"
			  gap="10" paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13"
			   addedToStage="title='Your authentication has expired.Login again to continue'"
			  horizontalAlign="center">
		<popup:Authentication id="login" 
								   width="100%" height="100%"
								   isCancelShow="false"
								   SUCCESS="onUserLoginSuccess(event)" CANCEL="closeByCrossSign(null)"/>
	</s:VGroup>
</resizableTitleWindow:ResizableTitleWindow>