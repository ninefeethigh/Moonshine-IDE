<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   backgroundColor="0xf5f5f5"
				   width="350" autoLayout="true" title="Select a Source Project"
				   close="closeHandler()" creationComplete="onCreationCompletes(event)" xmlns:view="actionScripts.plugin.findreplace.view.*">
	<fx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import actionScripts.events.NewFileEvent;
			import actionScripts.locator.IDEModel;
			import actionScripts.valueObjects.ProjectVO;
			
			public var wrapperProject:ProjectVO;
			
			[Bindable] private var model:IDEModel = IDEModel.getInstance();
			
			protected function closeHandler():void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function onChangeButton(event:MouseEvent):void
			{
				// validation check for Enter key
				if (!btnChange.enabled) return;
				
				var tmpEvent:NewFileEvent = new NewFileEvent(NewFileEvent.EVENT_PROJECT_SELECTED, null, null, null);
				tmpEvent.ofProject = lstResources.selectedItem as ProjectVO;
				dispatchEvent(tmpEvent);
				
				callLater(closeHandler);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE, true));
			}
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				lstResources.selectedItem = wrapperProject;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  gap="10" paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13"
			  horizontalAlign="center">
		<s:VGroup width="100%">
			<s:Label text="Select Source Project:"/>
			<s:List id="lstResources" 
					width="100%" height="100%"
					dataProvider="{model.projects}" labelField="projectName" styleName="multiLineList" requireSelection="true"
					doubleClickEnabled="true" doubleClick="onChangeButton(null)"/>
		</s:VGroup>
		<mx:HRule width="100%" height="1" strokeColor="0xdadada"
				  horizontalCenter="0"/>
		<s:Button id="btnChange" label="Select"
				  styleName="lightButtonTight" width="80"
				  click="onChangeButton(event)"/>
	</s:VGroup>
</s:TitleWindow>