<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   backgroundColor="0xf5f5f5"
				   width="500" minWidth="400" height="300" minHeight="300"
				   creationComplete="onCreationCompletes(event)" 
				   xmlns:view="actionScripts.plugin.findreplace.view.*" xmlns:utils="actionScripts.utils.*" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
				   skinClass="components.skins.ResizableTitleWindowSkin">
	<fx:Metadata>
		[Event(name="EVENT_NEW_FILE", type="actionScripts.events.NewFileEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			
			import actionScripts.events.NewFileEvent;
			import actionScripts.factory.FileLocation;
			import actionScripts.locator.IDEModel;
			
			public var folderLocation:FileLocation;
			
			[Bindable] private var model:IDEModel = IDEModel.getInstance();
			[Bindable] private var files:ArrayList;
			
			protected function onCreateButton(event:MouseEvent):void
			{
				var tmpEvent:NewFileEvent = new NewFileEvent(NewFileEvent.EVENT_FILE_SELECTED, lstResources.selectedItem.nativePath);
				dispatchEvent(tmpEvent);
				
				super.closeThis();
			}
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				title = "Main application file";
				
				// probable termination
				if (!folderLocation)
				{
					hgExistingWarning.visible = true;
					return;
				}
				
				var tmpFiles:Array = folderLocation.fileBridge.getDirectoryListing();
				files = new ArrayList();
				for each (var i:Object in tmpFiles)
				{
					if (i.extension == "as" || i.extension == "mxml") files.addItem(i);
				}
				
				if (files.length == 0) hgExistingWarning.visible = true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:StringValidator id="sValidator" property="text"/>
		<s:RadioButtonGroup id="rgModifiersA"/>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  gap="10" paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13"
			  horizontalAlign="center">
		<s:List id="lstResources" 
				width="100%" height="100%"
				dataProvider="{files}" labelField="name" styleName="multiLineList"
				doubleClickEnabled="true" doubleClick="onCreateButton(null)"/>
		<s:HGroup id="hgExistingWarning" 
				  width="100%" verticalAlign="middle" visible="false">
			<s:Image source="@Embed('/elements/images/iconExclamationRed.png')"/>
			<s:Label text="Source file should be immediate children of main source folder" width="100%"/>
		</s:HGroup>
		<mx:HRule width="100%" height="1" strokeColor="0xdadada"
				  horizontalCenter="0"/>
		<s:Button id="btnCreate" label="Select"
				  styleName="lightButtonTight" width="80"
				  click="onCreateButton(event)" enabled="{lstResources.selectedIndex != -1}"/>
	</s:VGroup>
</resizableTitleWindow:ResizableTitleWindow>