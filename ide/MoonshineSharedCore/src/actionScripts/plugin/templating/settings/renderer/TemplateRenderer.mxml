<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
// 
////////////////////////////////////////////////////////////////////////////////
-->
<s:VGroup 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
  	xmlns:s="library://ns.adobe.com/flex/spark"
  	xmlns:mx="library://ns.adobe.com/flex/mx"
  		
	width="100%"
	paddingLeft="15"
	paddingTop="5"
	paddingRight="15"
	paddingBottom="5"
	visible="true"
	creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import actionScripts.plugin.templating.settings.TemplateSetting;
			
			public static const EVENT_RESET:String = "reset";
			public static const EVENT_MODIFY:String = "modify";
			public static const EVENT_REMOVE:String = "delete";
			
			[Bindable]
			public var setting:TemplateSetting;
			
			[Bindable]
			public var showReset:Boolean;
			
			[Bindable]
			public var showRemove:Boolean;
			
			private function init():void
			{
				if (setting.originalTemplate == null)
				{
					showRemove = true;
				}
				else if (setting.customTemplate.fileBridge.exists)
				{
					showReset = true;
				}
					
			}
			
			private function reset():void
			{
				dispatchEvent(new Event(EVENT_RESET));
				showReset = false;
			}
			
			private function modify():void
			{
				dispatchEvent(new Event(EVENT_MODIFY));
				showReset = true;
			}
			
			private function remove():void
			{
				dispatchEvent(new Event(EVENT_REMOVE));
				showReset = false;
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Label styleName="uiTextSettingsValue"
			text="{setting.label}" />
		
		<mx:Spacer width="100%"/>
	
		<s:Button
			label="Remove"
			styleName="lightButton"
			visible="{showRemove}"
			click="remove()"
			/>
		<s:Button 
			label="Reset"
			styleName="lightButton"
			visible="{showReset &amp;&amp; !showRemove}"
			includeInLayout="{showReset &amp;&amp; !showRemove}"
			click="reset()" />
		<s:Button 
			label="Modify"
			styleName="lightButton"
			click="modify()" />
						
	</s:HGroup>
	
</s:VGroup>