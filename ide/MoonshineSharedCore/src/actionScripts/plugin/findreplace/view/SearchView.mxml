<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
// 
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:view="actionScripts.plugin.findreplace.view.*"
			   width="400" height="150"
			   backgroundColor="0xf5f5f5"
			   title="Find/Replace" skinClass="components.skins.ResizableTitleWindowSkin"
			   xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*">
	<fx:Script>
		<![CDATA[
			
			import actionScripts.plugin.findreplace.FindReplacePlugin;
			
			[Bindable] public var initialSearchString:String = "";
			
			private function findNext():void
			{
				dispatchEvent( new Event(FindReplacePlugin.EVENT_FIND_NEXT) );
			}
			
			private function findPrev():void
			{
				dispatchEvent( new Event(FindReplacePlugin.EVENT_FIND_PREV) );
			}
			
			private function replaceOne():void
			{
				dispatchEvent( new Event(FindReplacePlugin.EVENT_REPLACE_ONE) );
			}
			
			private function replaceAll():void
			{
				dispatchEvent( new Event(FindReplacePlugin.EVENT_REPLACE_ALL) );
			}
			
			private function focusInput():void
			{
				findInput.setFocus();
				findInput.selectRange(findInput.text.length, findInput.text.length);
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%"
			  paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13">
		<s:HGroup width="100%"
				  verticalAlign="middle" gap="4">
			<view:StatusTextInput
				id="findInput"
				prompt="Find"
				width="100%"
				styleName="textInputStatus"
				creationComplete="{focusInput()}"
				enter="findNext()"
				tabIndex="1"
				text="{initialSearchString}"/>
			<s:Button
				width="45"
				label="Next"
				styleName="lightButtonTight"
				click="findNext()" />
			<s:Button
				width="45"
				label="Prev"
				height="100%" 
				styleName="lightButtonTight"
				click="findPrev()" />
		</s:HGroup>
		<s:HGroup width="100%"
				  verticalAlign="middle" gap="4">
			<view:PromptTextInput
				id="replaceInput" 
				prompt="Replace"
				width="100%"
				styleName="textInput"
				enter="replaceOne()"
				tabIndex="2"/>
			<s:Button
				width="45"
				label="One"
				styleName="lightButtonTight"
				click="replaceOne()" />
			<s:Button
				width="45"
				label="All" 
				styleName="lightButtonTight"
				click="replaceAll()" />
		</s:HGroup>
		<s:HGroup width="100%"
				  verticalAlign="middle" gap="4">
			<s:CheckBox
				id="optionMatchCase"
				label="Match case" />
			<s:CheckBox
				id="optionRegExp"
				label="RegExp"/>
			<s:CheckBox
				id="optionEscapeChars" 
				label="Escape chars"/>
		</s:HGroup>
	</s:VGroup>
</resizableTitleWindow:ResizableTitleWindow>